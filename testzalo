{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"testzalo","provenance":[],"collapsed_sections":[],"mount_file_id":"1Uv_IE1rXuPZ2nL7i8mrQLQZEMADfyzvt","authorship_tag":"ABX9TyM1xRT4DgP0ty3JYgC7n+7p"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"1y308w1gVtNn"},"source":["# !pip install seqeval==0.0.5\n","# !pip install keras==2.2.4\n","# !pip install tensorflow==1.14.0\n","# !git clone https://www.github.com/keras-team/keras-contrib.git\n","# %cd keras-contrib\n","# !python setup.py install"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"A_5WpuFKgxMi"},"source":["%matplotlib inline\n","%reload_ext autoreload\n","%autoreload 2\n","# from fastai import *\n","# from fastai.text import *\n","import torch\n","import os\n","import shutil\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import f1_score\n","from bs4 import BeautifulSoup\n","# Install extra-dependencies\n","! pip -q install git+https://www.github.com/keras-team/keras-contrib.git sklearn-crfsuite\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import keras\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.utils import to_categorical\n","from keras.layers import LSTM, Dense, TimeDistributed, Embedding, Bidirectional\n","from keras.models import Model, Input, load_model\n","from keras_contrib.layers import CRF\n","from keras.callbacks import ModelCheckpoint\n","import tensorflow.compat.v1 as tf\n","tf.disable_v2_behavior()\n","from keras_contrib.layers import CRF\n","from keras_contrib.losses import  crf_loss\n","from keras_contrib.metrics import crf_viterbi_accuracy"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IYPPwGH2UXrc","executionInfo":{"status":"ok","timestamp":1605085135902,"user_tz":-420,"elapsed":1832,"user":{"displayName":"Tai Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgSxoywFDHJGfnox9fCFqAY1AQP9LOTTIEWMfp7=s64","userId":"06617934336246210574"}},"outputId":"5adecf0a-0e36-41af-df30-f9294461e882","colab":{"base_uri":"https://localhost:8080/"}},"source":["\n","import sys\n","sys.path.append('/content/drive/My Drive/Colab Notebooks/zalo/')\n","from utils import *\n","USE_GPU = torch.cuda.is_available()\n","print('USE_GPU={}'.format(USE_GPU))\n","if USE_GPU:\n","    print('current_device={}'.format(torch.cuda.current_device()))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["USE_GPU=True\n","current_device=0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8QNkzW6SU1h5"},"source":["DATA_PATH = '/content/drive/My Drive/Colab Notebooks/zalo/data/'\n","MODEL_DATA_PATH = \"/content/drive/My Drive/Colab Notebooks/zalo/model_ner/lstm_crf\"\n","TRAIN_DATA_PATH = f'{DATA_PATH}train_preprocess.csv'\n","MAX_LEN = 75"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CU21SwmFaDKq"},"source":["data = pd.read_csv(TRAIN_DATA_PATH)\n","data = data.fillna(method=\"ffill\")\n","\n","words = list(set(data[\"Word\"].values))\n","n_words = len(words)\n","\n","tags = list(set(data[\"Tag\"].values))\n","\n","words = list(data['Word'].unique())\n","tags = list(data['Tag'].unique())\n","word2idx = {w: i + 2 for i, w in enumerate(words)}\n","word2idx[\"UNK\"] = 1 # Unknown words\n","word2idx[\"PAD\"] = 0 # Padding\n","# Vocabulary Key:token_index -> Value:word\n","idx2word = {i: w for w, i in word2idx.items()}\n","# Vocabulary Key:Label/Tag -> Value:tag_index\n","# The first entry is reserved for PAD\n","tag2idx = {t: i+1 for i, t in enumerate(tags)}\n","tag2idx[\"PAD\"] = 0\n","# # Vocabulary Key:tag_index -> Value:Label/Tag\n","idx2word = {i: w for w, i in word2idx.items()}\n","idx2tag = {i: w for w, i in tag2idx.items()}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZRb_8V0ZWnz-","executionInfo":{"status":"ok","timestamp":1605085157648,"user_tz":-420,"elapsed":9076,"user":{"displayName":"Tai Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgSxoywFDHJGfnox9fCFqAY1AQP9LOTTIEWMfp7=s64","userId":"06617934336246210574"}},"outputId":"b5c3e8f9-f5b1-46a1-aac7-6ca526c2ac14","colab":{"base_uri":"https://localhost:8080/"}},"source":["model= load_model(MODEL_DATA_PATH,custom_objects={'CRF':CRF, 'crf_loss':crf_loss,'crf_viterbi_accuracy':crf_viterbi_accuracy})"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:517: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:74: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4138: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:133: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3445: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:2974: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:174: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:790: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"H4RSc41UYxjF"},"source":["test_sentence = ('Với hàng thủ cơ động, lại nhận được sự hỗ trợ của cặp tiền vệ trung tâm Kante - Matic, Chelsea đã vô hiệu hóa nhiều phương án tấn công của Arsenal').split()\n","x_test_sent = pad_sequences(sequences=[[word2idx.get(w, 0) for w in test_sentence]],padding=\"post\", value=word2idx[\"PAD\"], maxlen=MAX_LEN)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RJ0RVBe_ZEad"},"source":["p = model.predict(np.array([x_test_sent[0]]))\n","p = np.argmax(p, axis=-1)\n","print(\"{:15}||{}\".format(\"Word\", \"Prediction\"))\n","print(30 * \"=\")\n","for w, pred in zip(test_sentence, p[0]):\n","    print(\"{:15}: {:5}\".format(w, idx2tag[pred].replace('PAD','O')))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GiyuYOsiiUtT"},"source":["# Pattern Matching"]},{"cell_type":"code","metadata":{"id":"RRMj_b6iiUYl"},"source":[""],"execution_count":null,"outputs":[]}]}